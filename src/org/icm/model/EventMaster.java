package org.icm.model;
// Generated 5 Jun, 2012 5:27:43 PM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EventMaster generated by hbm2java
 */
@Entity
@Table(name="event_master"
    ,catalog="icm"
)
public class EventMaster  implements java.io.Serializable {


     private Integer eventId;
     private LanguageMaster languageMaster;
     private String eventName;
     private String eventDescription;
     private String category;
     private String keywords;
     private String spectatorLanguage;
     private String subLanguages;
     private String place;
     private Date datetime;
     private String eventAddress;
     private boolean eventStatus;
     private String contactPerson;
     private String contactNumber;
     private Date lastModifiedDate;

    public EventMaster() {
    }

	
    public EventMaster(LanguageMaster languageMaster, String eventName, String eventDescription, String place, Date datetime, String eventAddress, boolean eventStatus, String contactPerson, String contactNumber, Date lastModifiedDate) {
        this.languageMaster = languageMaster;
        this.eventName = eventName;
        this.eventDescription = eventDescription;
        this.place = place;
        this.datetime = datetime;
        this.eventAddress = eventAddress;
        this.eventStatus = eventStatus;
        this.contactPerson = contactPerson;
        this.contactNumber = contactNumber;
        this.lastModifiedDate = lastModifiedDate;
    }
    public EventMaster(LanguageMaster languageMaster, String eventName, String eventDescription, String category, String keywords, String spectatorLanguage, String subLanguages, String place, Date datetime, String eventAddress, boolean eventStatus, String contactPerson, String contactNumber, Date lastModifiedDate) {
       this.languageMaster = languageMaster;
       this.eventName = eventName;
       this.eventDescription = eventDescription;
       this.category = category;
       this.keywords = keywords;
       this.spectatorLanguage = spectatorLanguage;
       this.subLanguages = subLanguages;
       this.place = place;
       this.datetime = datetime;
       this.eventAddress = eventAddress;
       this.eventStatus = eventStatus;
       this.contactPerson = contactPerson;
       this.contactNumber = contactNumber;
       this.lastModifiedDate = lastModifiedDate;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="eventId", unique=true, nullable=false)
    public Integer getEventId() {
        return this.eventId;
    }
    
    public void setEventId(Integer eventId) {
        this.eventId = eventId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="languageId", nullable=false)
    public LanguageMaster getLanguageMaster() {
        return this.languageMaster;
    }
    
    public void setLanguageMaster(LanguageMaster languageMaster) {
        this.languageMaster = languageMaster;
    }
    
    @Column(name="eventName", nullable=false, length=50)
    public String getEventName() {
        return this.eventName;
    }
    
    public void setEventName(String eventName) {
        this.eventName = eventName;
    }
    
    @Column(name="eventDescription", nullable=false, length=100)
    public String getEventDescription() {
        return this.eventDescription;
    }
    
    public void setEventDescription(String eventDescription) {
        this.eventDescription = eventDescription;
    }
    
    @Column(name="category", length=100)
    public String getCategory() {
        return this.category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }
    
    @Column(name="keywords", length=200)
    public String getKeywords() {
        return this.keywords;
    }
    
    public void setKeywords(String keywords) {
        this.keywords = keywords;
    }
    
    @Column(name="spectatorLanguage", length=100)
    public String getSpectatorLanguage() {
        return this.spectatorLanguage;
    }
    
    public void setSpectatorLanguage(String spectatorLanguage) {
        this.spectatorLanguage = spectatorLanguage;
    }
    
    @Column(name="subLanguages", length=200)
    public String getSubLanguages() {
        return this.subLanguages;
    }
    
    public void setSubLanguages(String subLanguages) {
        this.subLanguages = subLanguages;
    }
    
    @Column(name="place", nullable=false, length=100)
    public String getPlace() {
        return this.place;
    }
    
    public void setPlace(String place) {
        this.place = place;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="datetime", nullable=false, length=19)
    public Date getDatetime() {
        return this.datetime;
    }
    
    public void setDatetime(Date datetime) {
        this.datetime = datetime;
    }
    
    @Column(name="eventAddress", nullable=false, length=300)
    public String getEventAddress() {
        return this.eventAddress;
    }
    
    public void setEventAddress(String eventAddress) {
        this.eventAddress = eventAddress;
    }
    
    @Column(name="eventStatus", nullable=false)
    public boolean isEventStatus() {
        return this.eventStatus;
    }
    
    public void setEventStatus(boolean eventStatus) {
        this.eventStatus = eventStatus;
    }
    
    @Column(name="contactPerson", nullable=false, length=50)
    public String getContactPerson() {
        return this.contactPerson;
    }
    
    public void setContactPerson(String contactPerson) {
        this.contactPerson = contactPerson;
    }
    
    @Column(name="contactNumber", nullable=false, length=12)
    public String getContactNumber() {
        return this.contactNumber;
    }
    
    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastModifiedDate", nullable=false, length=19)
    public Date getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    
    public void setLastModifiedDate(Date lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }




}


