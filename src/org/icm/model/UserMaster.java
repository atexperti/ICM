package org.icm.model;
// Generated 5 Jun, 2012 5:27:43 PM by Hibernate Tools 3.2.1.GA


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserMaster generated by hbm2java
 */
@Entity
@Table(name="user_master"
    ,catalog="icm"
)
public class UserMaster  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 4640685064361517820L;
	private Integer userId;
     private String userName;
     private String password;
     private String email;
     private String chruchName;
     private boolean status;
     private String address1;
     private String address2;
     private String favorites;
     private Date lastModifiedDate;
     private Set<ArticleMaster> articleMasters = new HashSet<ArticleMaster>(0);

    public UserMaster() {
    }

	
    public UserMaster(String userName, String password, String email, String chruchName, boolean status, String address1, Date lastModifiedDate) {
        this.userName = userName;
        this.password = password;
        this.email = email;
        this.chruchName = chruchName;
        this.status = status;
        this.address1 = address1;
        this.lastModifiedDate = lastModifiedDate;
    }
    public UserMaster(String userName, String password, String email, String chruchName, boolean status, String address1, String address2, String favorites, Date lastModifiedDate, Set articleMasters) {
       this.userName = userName;
       this.password = password;
       this.email = email;
       this.chruchName = chruchName;
       this.status = status;
       this.address1 = address1;
       this.address2 = address2;
       this.favorites = favorites;
       this.lastModifiedDate = lastModifiedDate;
       this.articleMasters = articleMasters;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="userId", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }
    
    @Column(name="userName", nullable=false, length=100)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }
    
    @Column(name="password", nullable=false, length=100)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="email", nullable=false, length=200)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="chruchName", nullable=false, length=200)
    public String getChruchName() {
        return this.chruchName;
    }
    
    public void setChruchName(String chruchName) {
        this.chruchName = chruchName;
    }
    
    @Column(name="status", nullable=false)
    public boolean isStatus() {
        return this.status;
    }
    
    public void setStatus(boolean status) {
        this.status = status;
    }
    
    @Column(name="address1", nullable=false, length=300)
    public String getAddress1() {
        return this.address1;
    }
    
    public void setAddress1(String address1) {
        this.address1 = address1;
    }
    
    @Column(name="address2", length=300)
    public String getAddress2() {
        return this.address2;
    }
    
    public void setAddress2(String address2) {
        this.address2 = address2;
    }
    
    @Column(name="favorites", length=500)
    public String getFavorites() {
        return this.favorites;
    }
    
    public void setFavorites(String favorites) {
        this.favorites = favorites;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastModifiedDate", nullable=false, length=19)
    public Date getLastModifiedDate() {
        return this.lastModifiedDate;
    }
    
    public void setLastModifiedDate(Date lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="userMaster")
    public Set<ArticleMaster> getArticleMasters() {
        return this.articleMasters;
    }
    
    public void setArticleMasters(Set<ArticleMaster> articleMasters) {
        this.articleMasters = articleMasters;
    }

    @Override
    public String toString(){
    return userName;	
    }

}


